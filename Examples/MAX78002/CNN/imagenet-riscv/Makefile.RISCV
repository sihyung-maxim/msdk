###############################################################################
 #
 # Copyright (C) 2022-2023 Maxim Integrated Products, Inc. (now owned by
 # Analog Devices, Inc.),
 # Copyright (C) 2023-2024 Analog Devices, Inc.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
 ##############################################################################

# This is the name of the build output file
ifeq "$(PROJECT)" ""
PROJECT=imagenet-riscv
endif

# Specify the target processor
ifeq "$(TARGET)" ""
TARGET=MAX78002
endif

MAKE=make

# Create Target name variables
TARGET_UC := $(subst m,M,$(subst a,A,$(subst x,X,$(TARGET))))
TARGET_LC := $(subst M,m,$(subst A,a,$(subst X,x,$(TARGET))))

# Select 'GCC' or 'IAR' compiler
COMPILER=GCC

# Specify the board used
ifeq "$(BOARD)" ""
BOARD=EvKit_V1
endif

RISCV_CORE=RV32
export RISCV_CORE

# This is the path to the CMSIS root directory
ifeq "$(MAXIM_PATH)" ""
LIBS_DIR=../../../../Libraries
else
ifeq ($(OS),Windows_NT)
LIBS_DIR=/$(subst \,/,$(subst :,,$(MAXIM_PATH))/Libraries)
else
LIBS_DIR=$(subst \,/,$(subst :,,$(MAXIM_PATH))/Libraries)
endif
endif
CMSIS_ROOT=$(LIBS_DIR)/CMSIS

#Use this for other library make files so they are all based off the same as root as the project
export CMSIS_ROOT
# Source files for this test (add path to VPATH below)
SRCS  = main_riscv.c cnn.c
SRCS += softmax.c

# Where to find source files for this test
VPATH  = .
VPATH += $(CMSIS_ROOT)/Device/Maxim/$(TARGET_UC)/Source
# Where to find header files for this test
IPATH  = .

# Enable all warnings
PROJ_CFLAGS+=-Wall -Wcast-align -DMXC_ASSERT_ENABLE -DRV32 

# Specify STACK SIZE
STACK_SIZE=1024
#HEAP_SIZE=2048 

# Specify RISCV MARCH and MABI (optional)
#MARCH=rv32imc 
#MABI=ilp32

# Specify the target revision to override default
# "A2" in ASCII
# TARGET_REV=0x4132

# Use this variables to specify and alternate tool path
#TOOL_DIR=/usr/local/riscv-none-embed-gcc/8.3.0-1.1

# Point this variable to a startup file to override the default file
#STARTUPFILE=startup_riscv_max78002.S

# Override the default optimization level using this variable
MXC_OPTIMIZE_CFLAGS=-O2

# Point this variable to a linker file to override the default file
LINKERFILE=$(CMSIS_ROOT)/Device/Maxim/$(TARGET_UC)/Source/GCC/$(TARGET_LC)_riscv.ld

################################################################################
# Include external library makefiles here

# Include the BSP
BOARD_DIR=$(LIBS_DIR)/Boards/$(TARGET_UC)/$(BOARD)
include $(BOARD_DIR)/board.mk

# Include the peripheral driver
PERIPH_DRIVER_DIR=$(LIBS_DIR)/PeriphDrivers
include $(PERIPH_DRIVER_DIR)/periphdriver.mk
export PERIPH_DRIVER_DIR

################################################################################
# Include the rules for building for this target. All other makefiles should be
# included before this one.
include $(CMSIS_ROOT)/Device/Maxim/$(TARGET_UC)/Source/$(COMPILER)/$(TARGET_LC).mk

# 	arm-none-eabi-objcopy $(BUILD_DIR)/$(PROJECT).elf -R .sig -O binary $(BUILD_DIR)/$(PROJECT).bin
# 	$(CA_SIGN_BUILD) $(BUILD_DIR)/$(PROJECT).bin $(TEST_KEY)
# 	arm-none-eabi-objcopy  $(BUILD_DIR)/$(PROJECT).elf --update-section .sig=$(BUILD_DIR)/$(PROJECT).bin.sig
libclean: 
	$(MAKE) -f ${PERIPH_DRIVER_DIR}/periphdriver.mk clean.periph

# The rule to clean out all the build products.
distclean: clean libclean

#	arm-none-eabi-objcopy $(BUILD_DIR)/$(PROJECT).elf -O binary $(BUILD_DIR)/$(PROJECT).sbin
#	$(BUILD_SESSION) $(BUILD_DIR)/$(PROJECT).sbin scp_packets $(TEST_KEY)
